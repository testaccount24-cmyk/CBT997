/* REXX */
 /********************************************************************/
 /*                                                                  */
 /*       NAME: REXXCSI   (WAS IGGCSIRX)                             */
 /*DESCRIPTION: THIS REXX EXEC IS USED TO CALL THE CATALOG           */
 /*             SEARCH INTERFACE.                                    */
 /*      INPUT: FILTER KEY                                           */
 /*     OUTPUT: DSNTYPE  DSNAME  VOLSER                              */
 /*                                                                  */
 /* MODIFIED BY LBD TO REQUIRE A HLQ ON ENTRY AND RETURN JUST        */
 /*          THE DSNAMES                                             */
 /*                                                                  */
 /* CHANGE ACTIVITY:                                                 */
 /* $01=OW39593,HDZ11F0,990904,SJPLMET: BUMP WORK AREA TO        @01A*/
 /*              64,000 BYTES TO HANDLE CASES WHERE THE RETURN   @01A*/
 /*              DATA FOR A GDG BASE CANNOT FIT IN A WORKAREA    @01A*/
 /*              EVEN ON A RESUME.  THE EXAMPLE IS CHANGED TO    @01A*/
 /*              STOP WHEN THIS HAPPENS AND ISSUE A MESSAGE.     @01A*/
 /* $01=OW46614,HDZ11G0,010130,SJPLMET: CORRECT FAILURE TO       @02A*/
 /*             DISPLAY ALL INFO WHEN THE FILTER KEY CONTAINS A  @02A*/
 /*             GENERIC IN THE HLQ.                              @02A*/
 /*                                                                  */
 /********************************************************************/
 ARG KEY
 /********************************************************************/
 /*                                                                  */
 /*  INITIALIZE THE PARM LIST                                        */
 /*                                                                  */
 /********************************************************************/
MODRSNRC = SUBSTR(' ',1,4)          /*   CLEAR MODULE/RETURN/REASON  */
CSIFILTK = SUBSTR(KEY,1,44)         /*   MOVE FILTER KEY INTO LIST   */
CSICATNM = SUBSTR(' ',1,44)         /*   CLEAR CATALOG NAME          */
CSIRESNM = SUBSTR(' ',1,44)         /*   CLEAR RESUME NAME           */
CSIDTYPS = SUBSTR(' ',1,16)         /*   CLEAR ENTRY TYPES           */
CSICLDI  = SUBSTR('Y',1,1)          /*   INDICATE DATA AND INDEX     */
CSIRESUM = SUBSTR(' ',1,1)          /*   CLEAR RESUME FLAG           */
CSIS1CAT = SUBSTR(' ',1,1)          /*   INDICATE SEARCH > 1 CATALOGS*/
CSIRESRV = SUBSTR(' ',1,1)          /*   CLEAR RESERVE CHARACTER     */
CSINUMEN = '0001'X                  /*   INIT NUMBER OF FIELDS       */
CSIFLD1    = SUBSTR('VOLSER',1,8)   /*   INIT FIELD 1 FOR VOLSERS    */
 /********************************************************************/
 /*                                                                  */
 /*  BUILD THE SELECTION CRITERIA FIELDS PART OF PARAMETER LIST      */
 /*                                                                  */
 /********************************************************************/
CSIOPTS  = CSICLDI || CSIRESUM || CSIS1CAT || CSIRESRV
CSIFIELD = CSIFILTK || CSICATNM || CSIRESNM || CSIDTYPS || CSIOPTS
CSIFIELD = CSIFIELD || CSINUMEN || CSIFLD1

 /********************************************************************/
 /*                                                                  */
 /*  INITIALIZE AND BUILD WORK ARE OUTPUT PART OF PARAMETER LIST     */
 /*                                                                  */
 /********************************************************************/
WORKLEN = 64000                                                /*@01C*/
DWORK = '0000FA00'X || COPIES('00'X,WORKLEN-4)                 /*@01C*/

 /********************************************************************/
 /*                                                                  */
 /*  INITIALIZE WORK VARIABLES                                       */
 /*                                                                  */
 /********************************************************************/
RESUME = 'Y'
PREVNAME = ''                     /* NO PREVIOUS NAME            @01A*/
CATNAMET = SUBSTR(' ',1,44)
DNAMET = SUBSTR(' ',1,44)

 /********************************************************************/
 /*                                                                  */
 /*  SET UP LOOP FOR RESUME (IF A RESUME IS NCESSARY)                */
 /*                                                                  */
 /********************************************************************/
DO WHILE RESUME = 'Y'

 /********************************************************************/
 /*                                                                  */
 /*  ISSUE LINK TO CATALOG GENERIC FILTER INTERFACE                  */
 /*                                                                  */
 /********************************************************************/
 ADDRESS LINKPGM 'IGGCSI00  MODRSNRC  CSIFIELD  DWORK'

 RESUME = SUBSTR(CSIFIELD,150,1)    /* GET RESUME FLAG FOR NEXT LOOP */
 USEDLEN = C2D(SUBSTR(DWORK,9,4))   /* GET AMOUNT OF WORK AREA USED  */
 POS1=15                            /* STARTING POSITION             */

 /********************************************************************/
 /*                                                                  */
 /*  PROCESS DATA RETURNED IN WORK AREA                              */
 /*                                                                  */
 /********************************************************************/
 DO WHILE POS1 < USEDLEN            /* DO UNTIL ALL DATA IS PROCESSED*/
   IF SUBSTR(DWORK,POS1+1,1) = '0'  /* IF CATALOG, EXTRACT CATALOG   */
    THEN DO                         /* NAME FOR LATER PRINTING   @02C*/
         CATNAME=SUBSTR(DWORK,POS1+2,44)
         POS1 = POS1 + 50
         END
  IF POS1 < USEDLEN THEN             /* IF STILL MORE DATA       @02A*/
   DO                                /* CONTINUE WITH NEXT ENTRY @02A*/
    DNAME = SUBSTR(DWORK,POS1+2,44)  /* GET ENTRY NAME               */

 /********************************************************************/
 /*                                                                  */
 /*  ASSIGN ENTRY TYPE NAME                                          */
 /*                                                                  */
 /********************************************************************/
   IF SUBSTR(DWORK,POS1+1,1) = 'C' THEN DTYPE = 'CLUSTER '
    ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'D' THEN DTYPE = 'DATA    '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'I' THEN DTYPE = 'INDEX   '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'A' THEN DTYPE = 'NONVSAM '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'H' THEN DTYPE = 'GDS     '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'B' THEN DTYPE = 'GDG     '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'R' THEN DTYPE = 'PATH    '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'G' THEN DTYPE = 'AIX     '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'X' THEN DTYPE = 'ALIAS   '
     ELSE
      IF SUBSTR(DWORK,POS1+1,1) = 'U' THEN DTYPE = 'UCAT    '
     ELSE
       IF SUBSTR(DWORK,POS1+1,1) = 'L' THEN DTYPE = 'ATLLIB  ' /*@02A*/
      ELSE                                                     /*@02A*/
       IF SUBSTR(DWORK,POS1+1,1) = 'W' THEN DTYPE = 'ATLVOL  ' /*@02A*/
      ELSE ,    /*  NO ENTRIES IN THE CATALOG - LOOK AT    */  /*@02A*/
        ITERATE   /*  NEXT CATALOG NAME - GENERIC HLQ ONLY */  /*@02A*/
 /********************************************************************/
 /*                                                                  */
 /*  HAVE NAME AND TYPE, GET VOLSER INFO.  IF WE FOUND A VALID TYPE  */
 /*  FOR THIS CATALOG, NOW PRINT THE CATALOG NAME (FIRST ENTRY ONLY).*/
 /*                                                                  */
 /********************************************************************/
     IF CATNAME Â¬= CATNAMET THEN /* IF RESUME NAME MAY ALREADY   @02C*/
      DO                         /*    BE PRINTED                    */
       SAY 'CATALOG ' CATNAME    /* IF NOT, PRINT IT             @02C*/
       SAY ' '                                                 /*@02C*/
       CATNAMET = CATNAME                                      /*@02C*/
      END                                                      /*@02C*/
    POS1 = POS1 + 46
    NUMVOL = C2D(SUBSTR(DWORK,POS1+4,2))/6 /* HOW MANY VOLSERS ?     */
                                    /*                               */
    POS2 = POS1+6                   /* POSITION ON DATA              */
    DO I=1 TO 3                     /* ONLY CLEAR 3 VOLSER FIELDS    */
      VOLSER.I = SUBSTR(' ',1,6)
    END
    DO I = 1 TO NUMVOL              /* MOVE VOLSERS TO OUTPUT FIELDS */
      VOLSER.I = SUBSTR(DWORK,POS2,6)
      POS2 = POS2 + 6
    END
     SAY COPIES(' ',8) DTYPE DNAME VOLSER.1 VOLSER.2 VOLSER.3
 /********************************************************************/
 /*                                                                  */
 /*   GET POSITION OF NEXT ENTRY                                     */
 /*                                                                  */
 /********************************************************************/
    POS1 = POS1 + C2D(SUBSTR(DWORK,POS1,2))
  END                               /* OF ROOM LEFT IN WORKAREA  @02A*/
 END
 IF RESUME = 'Y' &,                 /* IF WE'VE TRIED THIS ENTRY @01A*/
  PREVNAME = DNAME THEN             /* TWICE, WE'VE GOT TO QUIT  @01A*/
   DO                                                          /*@01A*/
     SAY STRIP(DNAME) 'CANNOT BE PROCESSED WITH THE WORK AREA SIZE ',
         'PROVIDED - YOU MUST INCREASE THE WORK AREA AND RETRY'
     RETURN                                                    /*@01A*/
   END                                                         /*@01A*/
 PREVNAME = DNAME                   /* SAVE FOR NEXT ITERATION   @01A*/
END
